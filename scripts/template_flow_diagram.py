#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
生成OCR模板调用流程图
"""

def generate_template_flow_diagram():
    """生成模板调用流程的文本图表"""
    
    print("🔄 OCR模板调用完整流程图")
    print("=" * 100)
    
    flow_diagram = """
┌─────────────────────────────────────────────────────────────────────────────────────┐
│                              OCR模板调用完整流程                                    │
└─────────────────────────────────────────────────────────────────────────────────────┘

┌─────────────┐    ┌─────────────────┐    ┌─────────────────────┐
│  PDF文件    │───▶│  Invoice2Data   │───▶│   模板加载器        │
│ 输入        │    │  Client初始化   │    │  (Template Loader)  │
└─────────────┘    └─────────────────┘    └─────────────────────┘
                                                    │
                                                    ▼
                    ┌─────────────────────────────────────────────────┐
                    │            扫描templates/目录                    │
                    │  ┌─────────────────────────────────────────┐   │
                    │  │ - china_railway_ticket.yml (优先级200) │   │
                    │  │ - feichu_airline_invoice.yml (130)     │   │
                    │  │ - china_standard_invoice.yml (120)     │   │
                    │  │ - china_vat_special_invoice.yml (110)  │   │
                    │  └─────────────────────────────────────────┘   │
                    └─────────────────────────────────────────────────┘
                                                    │
                                                    ▼
┌─────────────┐    ┌─────────────────┐    ┌─────────────────────┐
│  文本提取   │───▶│  预处理文本     │───▶│  模板匹配引擎       │
│(PyMuPDF)    │    │ (垂直文本修复)  │    │                     │
└─────────────┘    └─────────────────┘    └─────────────────────┘
                                                    │
                                                    ▼
                    ┌─────────────────────────────────────────────────┐
                    │          按优先级遍历模板                       │
                    │                                                 │
                    │  模板1: 中国铁路电子客票 (优先级: 200)          │
                    │  ├─ 关键词匹配: ['电子客票', '12306']           │
                    │  ├─ 匹配结果: ❌ (关键词不存在)                │
                    │  └─ 跳过该模板                                  │
                    │                                                 │
                    │  模板2: 飞猪航空发票 (优先级: 130)             │
                    │  ├─ 关键词匹配: ['航空', '机票']               │
                    │  ├─ 匹配结果: ❌ (关键词不存在)                │
                    │  └─ 跳过该模板                                  │
                    │                                                 │
                    │  模板3: 中国标准电子发票 (优先级: 120) ✅       │
                    │  ├─ 关键词匹配: ['电子', '普通发票']           │
                    │  ├─ 匹配结果: ✅ (关键词存在)                  │
                    │  └─ 使用该模板进行字段提取                      │
                    └─────────────────────────────────────────────────┘
                                                    │
                                                    ▼
                    ┌─────────────────────────────────────────────────┐
                    │              字段提取过程                       │
                    │                                                 │
                    │  发票号码: 发票号码[：:]\s*(\d+)               │
                    │  ├─ 正则匹配: "发 票 号 码 : 25432000000031789815" │
                    │  └─ 提取结果: ❌ (空格导致匹配失败)            │
                    │                                                 │
                    │  开票日期: 开票日期[：:]\s*(\d{4}年\d{1,2}月\d{1,2}日) │
                    │  ├─ 正则匹配: "开 票 日 期 : 2025年03月12日"     │
                    │  └─ 提取结果: ❌ (空格导致匹配失败)            │
                    │                                                 │
                    │  购买方名称: 购.*?名\s*称[：:]\s*([^\\n\\s]+...)  │
                    │  ├─ 正则匹配: "购 名称: 杭州趣链科技有限公司"   │
                    │  └─ 提取结果: ✅ "杭州趣链科技有限公司"        │
                    │                                                 │
                    │  销售方名称: 销.*?名\s*称[：:]\s*([^\\n]+...)    │
                    │  ├─ 正则匹配: "销 名称:湖南曾小厨餐饮管理..."   │
                    │  └─ 提取结果: ✅ "湖南曾小厨餐饮管理有限公司贤童店" │
                    │                                                 │
                    │  金额: 价税合计.*?小写.*?¥\s*([0-9,]+\.?\d*)    │
                    │  ├─ 正则匹配: "价税合计( 小写) ¥80.00"         │
                    │  └─ 提取结果: ✅ "80.00"                      │
                    │                                                 │
                    │  开票人: 开\s*票\s*人[：:]\s*([^\\s\\n]+)        │
                    │  ├─ 正则匹配: "开 票 人: 彭丽芳"               │
                    │  └─ 提取结果: ✅ "彭丽芳"                     │
                    └─────────────────────────────────────────────────┘
                                                    │
                                                    ▼
┌─────────────┐    ┌─────────────────┐    ┌─────────────────────┐
│  数据验证   │───▶│  类型转换       │───▶│  构建结果对象       │
│  和清理     │    │ (日期/金额等)   │    │(StructuredInvoiceData)│
└─────────────┘    └─────────────────┘    └─────────────────────┘
                                                    │
                                                    ▼
                    ┌─────────────────────────────────────────────────┐
                    │                最终提取结果                     │
                    │                                                 │
                    │  {                                              │
                    │    "status": "success",                         │
                    │    "confidence": 1.0,                           │
                    │    "extraction_method": "invoice2data",         │
                    │    "structured_data": {                         │
                    │      "main_info": {                             │
                    │        "invoice_number": "25432000000031789815", │
                    │        "invoice_date": "2025-03-12"             │
                    │      },                                         │
                    │      "seller_info": {                           │
                    │        "name": "湖南曾小厨餐饮管理有限公司贤童店" │
                    │      },                                         │
                    │      "buyer_info": {                            │
                    │        "name": "杭州趣链科技有限公司"           │
                    │      },                                         │
                    │      "summary": {                               │
                    │        "total_amount": 80.00                    │
                    │      },                                         │
                    │      "issuer_person": "彭丽芳"                  │
                    │    }                                            │
                    │  }                                              │
                    └─────────────────────────────────────────────────┘
"""
    
    print(flow_diagram)
    
    print("\n" + "=" * 100)
    print("🔧 模板系统核心机制说明")
    print("=" * 100)
    
    mechanisms = {
        "1. 模板优先级排序": {
            "说明": "模板按priority字段降序排列，数值越大优先级越高",
            "示例": "铁路客票(200) > 航空发票(130) > 标准发票(120) > 增值税发票(110)",
            "优势": "确保特殊格式发票优先匹配，提高准确性"
        },
        
        "2. 关键词匹配": {
            "说明": "检查模板keywords列表中的关键词是否在文本中存在",
            "示例": "['电子', '普通发票'] → 文本包含'电子发票'和'普通发票'",
            "优势": "快速筛选合适的模板，避免不必要的正则计算"
        },
        
        "3. 正则字段提取": {
            "说明": "使用正则表达式从文本中提取具体字段值",
            "示例": "'发票号码[：:]\\s*(\\d+)' → 匹配发票号码后的数字",
            "优势": "精确提取，支持复杂的文本模式"
        },
        
        "4. 类型转换": {
            "说明": "将提取的字符串转换为对应的数据类型",
            "示例": "日期字符串 → date对象, 金额字符串 → Decimal对象",
            "优势": "确保数据类型正确，便于后续处理"
        },
        
        "5. 数据验证": {
            "说明": "验证提取数据的完整性和合理性",
            "示例": "检查发票号码长度、金额范围、日期格式等",
            "优势": "提高数据质量，减少错误数据"
        }
    }
    
    for mechanism, details in mechanisms.items():
        print(f"\n{mechanism}")
        print(f"  说明: {details['说明']}")
        print(f"  示例: {details['示例']}")
        print(f"  优势: {details['优势']}")
    
    print("\n" + "=" * 100)
    print("🎯 模板设计最佳实践")
    print("=" * 100)
    
    best_practices = [
        "优先级设置: 特殊格式 > 通用格式，避免误匹配",
        "关键词选择: 选择独特且稳定的文本特征",
        "正则表达式: 考虑文本预处理后的格式变化",
        "容错处理: 使用可选匹配和多种模式",
        "性能优化: 将计算成本高的模板设置较低优先级",
        "维护性: 使用描述性的字段名和注释",
        "测试覆盖: 每个模板都需要对应的测试用例"
    ]
    
    for i, practice in enumerate(best_practices, 1):
        print(f"{i}. {practice}")

if __name__ == "__main__":
    generate_template_flow_diagram()