#!/usr/bin/env python3
"""
ÊµãËØïÂèëÁ•®‰∏ä‰º†ÂíåOCRÂ§ÑÁêÜÁöÑÂÆåÊï¥ÊµÅÁ®ã
"""

import asyncio
import json
import jwt
import requests
import time
from pathlib import Path

# ÊµãËØïÈÖçÁΩÆ
BASE_URL = "http://localhost:8090"
API_PREFIX = "/api/v1"
TEST_PDF = "downloads/25359134169000052039.pdf"
TIMEOUT = 120  # 2ÂàÜÈíüË∂ÖÊó∂ÔºåÂõ†‰∏∫OCRÂ§ÑÁêÜÈúÄË¶ÅÊó∂Èó¥

def create_test_token():
    """ÂàõÂª∫ÊµãËØïÁî®ÁöÑJWT token"""
    payload = {
        "id": "550e8400-e29b-41d4-a716-446655440000",
        "email": "test@example.com",
        "role": "authenticated", 
        "aud": "authenticated",
        "exp": int(time.time()) + 3600  # 1Â∞èÊó∂ËøáÊúü
    }
    
    # ‰ΩøÁî®Supabase JWTÂØÜÈí•
    secret = "yHxlqeLo2KTzkvNoqC0EAgGw+sDPi5bEwcCe3iiCyEQvlaG0hv6ufYb1eq54NE6X3RROiARlplnEwBLyzqfZrw=="
    token = jwt.encode(payload, secret, algorithm="HS256")
    return token

def test_invoice_upload():
    """ÊµãËØïÂèëÁ•®‰∏ä‰º†ÂäüËÉΩ"""
    
    print("üß™ ÂºÄÂßãÊµãËØïÂèëÁ•®‰∏ä‰º†ÂíåOCRÂ§ÑÁêÜ...")
    print(f"üìÅ ÊµãËØïÊñá‰ª∂: {TEST_PDF}")
    
    # Ê£ÄÊü•Êñá‰ª∂ÊòØÂê¶Â≠òÂú®
    if not Path(TEST_PDF).exists():
        print("‚ùå ÊµãËØïÊñá‰ª∂‰∏çÂ≠òÂú®")
        return
    
    file_size = Path(TEST_PDF).stat().st_size
    print(f"üìè Êñá‰ª∂Â§ßÂ∞è: {file_size / 1024:.2f} KB")
    
    # ÂàõÂª∫ÊµãËØïtoken
    token = create_test_token()
    print(f"üîë ÊµãËØïToken: {token[:50]}...")
    
    # ÂáÜÂ§áËØ∑Ê±Ç
    url = f"{BASE_URL}{API_PREFIX}/files/upload"
    headers = {
        "Authorization": f"Bearer {token}"
    }
    
    # ÊµãËØïËÆ§ËØÅÁ´ØÁÇπ
    print(f"\n1Ô∏è‚É£ ÊµãËØïËÆ§ËØÅÁä∂ÊÄÅ...")
    try:
        auth_response = requests.get(f"{BASE_URL}{API_PREFIX}/auth/status", headers=headers, timeout=10)
        print(f"ËÆ§ËØÅÁä∂ÊÄÅ: {auth_response.status_code}")
        if auth_response.status_code == 200:
            auth_data = auth_response.json()
            print(f"ËÆ§ËØÅÁªìÊûú: {json.dumps(auth_data, indent=2, ensure_ascii=False)}")
        else:
            print(f"ËÆ§ËØÅÂ§±Ë¥•: {auth_response.text}")
    except Exception as e:
        print(f"ËÆ§ËØÅËØ∑Ê±ÇÂ§±Ë¥•: {e}")
    
    # ‰∏ä‰º†Êñá‰ª∂
    print(f"\n2Ô∏è‚É£ ‰∏ä‰º†Êñá‰ª∂ËøõË°åOCRÂ§ÑÁêÜ...")
    print(f"POST {url}")
    
    try:
        with open(TEST_PDF, 'rb') as f:
            files = {
                'file': (Path(TEST_PDF).name, f, 'application/pdf')
            }
            data = {
                'create_invoice': 'true'
            }
            
            print("üì§ ÂèëÈÄÅËØ∑Ê±Ç...")
            start_time = time.time()
            
            response = requests.post(
                url,
                files=files,
                data=data,
                headers=headers,
                timeout=TIMEOUT
            )
            
            end_time = time.time()
            process_time = end_time - start_time
            
            print(f"‚è±Ô∏è Â§ÑÁêÜÊó∂Èó¥: {process_time:.2f} Áßí")
            print(f"üìä ÂìçÂ∫îÁä∂ÊÄÅÁ†Å: {response.status_code}")
            print(f"üìã ÂìçÂ∫îÂ§¥: {dict(response.headers)}")
            
            if response.status_code == 200:
                print("\n‚úÖ ‰∏ä‰º†ÊàêÂäü!")
                result = response.json()
                print("üìÑ ÂÆåÊï¥ÂìçÂ∫îÂÜÖÂÆπ:")
                print(json.dumps(result, indent=2, ensure_ascii=False))
                
                # Â¶ÇÊûúËøîÂõû‰∫Üinvoice_idÔºåËé∑ÂèñËØ¶ÁªÜ‰ø°ÊÅØ
                if 'invoice_id' in result:
                    invoice_id = result['invoice_id']
                    print(f"\n3Ô∏è‚É£ Ëé∑ÂèñÂèëÁ•®ËØ¶ÊÉÖ (ID: {invoice_id})...")
                    
                    detail_response = requests.get(
                        f"{BASE_URL}{API_PREFIX}/invoices/{invoice_id}",
                        headers=headers,
                        timeout=30
                    )
                    
                    print(f"üìä ËØ¶ÊÉÖÊü•ËØ¢Áä∂ÊÄÅ: {detail_response.status_code}")
                    if detail_response.status_code == 200:
                        detail_data = detail_response.json()
                        print("üìã ÂèëÁ•®ËØ¶ÊÉÖ:")
                        print(json.dumps(detail_data, indent=2, ensure_ascii=False))
                    else:
                        print(f"‚ùå ËØ¶ÊÉÖÊü•ËØ¢Â§±Ë¥•: {detail_response.text}")
                
                return result
                
            else:
                print(f"\n‚ùå ‰∏ä‰º†Â§±Ë¥•!")
                print(f"ÈîôËØØÂÜÖÂÆπ: {response.text}")
                
                try:
                    error_data = response.json()
                    print(f"ÈîôËØØËØ¶ÊÉÖ: {json.dumps(error_data, indent=2, ensure_ascii=False)}")
                except:
                    pass
                
                return None
                
    except requests.exceptions.Timeout:
        print(f"‚ùå ËØ∑Ê±ÇË∂ÖÊó∂ (>{TIMEOUT}Áßí)")
        return None
    except Exception as e:
        print(f"‚ùå ËØ∑Ê±ÇÂ§±Ë¥•: {e}")
        import traceback
        traceback.print_exc()
        return None

if __name__ == "__main__":
    test_invoice_upload()