version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: invoice-frontend
    restart: unless-stopped
    depends_on:
      - backend
    volumes:
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_HOST=${DOMAIN}
    networks:
      - invoice-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: invoice-backend
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - APP_HOST=0.0.0.0
      - APP_PORT=8070
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - ALICLOUD_ACCESS_KEY_ID=${ALICLOUD_ACCESS_KEY_ID}
      - ALICLOUD_ACCESS_KEY_SECRET=${ALICLOUD_ACCESS_KEY_SECRET}
    ports:
      - "8070:8070"
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8070/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - invoice-network

  nginx:
    image: nginx:alpine
    container_name: invoice-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - backend
    networks:
      - invoice-network

networks:
  invoice-network:
    driver: bridge

volumes:
  logs:
    driver: local