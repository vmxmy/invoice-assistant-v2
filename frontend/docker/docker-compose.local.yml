version: '3.8'

services:
  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        BUILD_MODE: local
      target: builder  # Only build to builder stage for development
    ports:
      - "${PORT:-3002}:8080"
    environment:
      # Supabase Configuration
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL:-http://localhost:54321}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
      - VITE_SUPABASE_SERVICE_KEY=${VITE_SUPABASE_SERVICE_KEY}
      
      # Database Configuration
      - DB_URL=${DB_URL:-postgresql://postgres:postgres@localhost:54322/postgres}
      
      # App Configuration - Local Development
      - VITE_APP_ENV=local
      - VITE_APP_NAME=${VITE_APP_NAME:-Invoice Assistant (Local)}
      - VITE_APP_VERSION=${VITE_APP_VERSION:-2.0.22-dev}
      
      # API Configuration
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://localhost:3000}
      
      # Feature Flags - Development
      - VITE_ENABLE_ANALYTICS=${VITE_ENABLE_ANALYTICS:-false}
      - VITE_ENABLE_DEBUG=${VITE_ENABLE_DEBUG:-true}
      
      # Development specific
      - NODE_ENV=development
      
    volumes:
      # Hot reload support
      - ../src:/app/src:ro
      - ../public:/app/public:ro
      - ../package.json:/app/package.json:ro
      - ../vite.config.ts:/app/vite.config.ts:ro
      - ../tsconfig.json:/app/tsconfig.json:ro
      - ../tailwind.config.js:/app/tailwind.config.js:ro
      - node_modules:/app/node_modules
    restart: unless-stopped
    networks:
      - development-network
    
    # Development-optimized health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/", "||", "exit", "1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    
    # Development resource limits (more lenient)
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 2048M

  # Development database (Supabase local)
  postgres:
    image: supabase/postgres:15.1.1.10
    ports:
      - "${DB_PORT:-54322}:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - development-network

  # Development API gateway (optional)
  kong:
    image: kong/kong-gateway:3.4.0
    ports:
      - "${KONG_HTTP_PORT:-8000}:8000"
      - "${KONG_HTTPS_PORT:-8443}:8443"
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    volumes:
      - ./kong.yml:/usr/local/kong/kong.yml:ro
    networks:
      - development-network

volumes:
  postgres_data:
  node_modules:

networks:
  development-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16