import 'package:flutter/cupertino.dart';
// Material导入已移除，使用纯Cupertino架构
import 'package:flutter_bloc/flutter_bloc.dart';
import '../../domain/entities/reimbursement_set_entity.dart';
import '../../domain/entities/invoice_entity.dart';
import '../../core/events/app_event_bus.dart';
import '../widgets/unified_bottom_sheet.dart';
import '../bloc/reimbursement_set_bloc.dart';
import '../bloc/reimbursement_set_event.dart';
import '../bloc/reimbursement_set_state.dart';

/// 发票加入报销集操作工具类
/// 职责：UI确认逻辑 + 事件触发，不直接调用BLoC
class InvoiceToSetOperationUtils {
  InvoiceToSetOperationUtils._();
  
  static final AppEventBus _eventBus = AppEventBus.instance;

  /// 显示选择已有报销集对话框
  static Future<void> showSelectExistingSetDialog({
    required BuildContext context,
    required List<String> invoiceIds,
    List<InvoiceEntity>? invoices,
  }) async {
    // 首先确保报销集数据已加载
    final reimbursementSetBloc = context.read<ReimbursementSetBloc>();
    reimbursementSetBloc.add(const LoadReimbursementSets(refresh: false));
    final colorScheme = Theme.of(context).colorScheme;
    
    // 构建选择报销集内容
    final selectForm = StatefulBuilder(
      builder: (context, setState) => Column(
        mainAxisSize: MainAxisSize.min,
        children: [
          // 标题区域
          Row(
            children: [
              Container(
                width: 48,
                height: 48,
                decoration: BoxDecoration(
                  color: colorScheme.primary.withValues(alpha: 0.1),
                  borderRadius: BorderRadius.circular(24),
                ),
                child: Icon(
                  CupertinoIcons.folder_badge_plus,
                  color: colorScheme.primary,
                  size: 24,
                ),
              ),
              const SizedBox(width: 16),
              Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    '加入已有报销集',
                    style: Theme.of(context).textTheme.headlineSmall?.copyWith(
                          fontWeight: FontWeight.w600,
                          color: colorScheme.onSurface,
                        ),
                  ),
                  Text(
                    '选择要加入的报销集（${invoiceIds.length} 张发票）',
                    style: Theme.of(context).textTheme.bodySmall?.copyWith(
                          color: colorScheme.onSurfaceVariant,
                        ),
                  ),
                ],
              ),
            ],
          ),
          const SizedBox(height: 24),
          
          // 报销集列表
          BlocBuilder<ReimbursementSetBloc, ReimbursementSetState>(
            builder: (context, state) {
              if (state is ReimbursementSetLoading) {
                return const Center(
                  child: Padding(
                    padding: EdgeInsets.all(32),
                    child: CupertinoActivityIndicator(),
                  ),
                );
              }
              
              if (state is ReimbursementSetLoaded) {
                final availableSets = state.reimbursementSets.where((set) => 
                  set.status == ReimbursementSetStatus.unsubmitted
                ).toList();
                
                if (availableSets.isEmpty) {
                  return Container(
                    padding: const EdgeInsets.all(32),
                    child: Column(
                      children: [
                        Icon(
                          CupertinoIcons.folder,
                          size: 48,
                          color: colorScheme.onSurfaceVariant,
                        ),
                        const SizedBox(height: 16),
                        Text(
                          '暂无可用的报销集',
                          style: Theme.of(context).textTheme.bodyLarge?.copyWith(
                                color: colorScheme.onSurfaceVariant,
                              ),
                        ),
                        const SizedBox(height: 8),
                        Text(
                          '只有未提交状态的报销集才能添加发票',
                          style: Theme.of(context).textTheme.bodySmall?.copyWith(
                                color: colorScheme.onSurfaceVariant,
                              ),
                          textAlign: TextAlign.center,
                        ),
                      ],
                    ),
                  );
                }
                
                return ConstrainedBox(
                  constraints: const BoxConstraints(
                    maxHeight: 300, // 限制最大高度
                  ),
                  child: ListView.separated(
                    shrinkWrap: true,
                    itemCount: availableSets.length,
                    separatorBuilder: (context, index) => Divider(
                      height: 1,
                      color: colorScheme.outline.withValues(alpha: 0.2),
                    ),
                    itemBuilder: (context, index) {
                      final set = availableSets[index];
                      return ListTile(
                        leading: Container(
                          width: 40,
                          height: 40,
                          decoration: BoxDecoration(
                            color: colorScheme.primaryContainer,
                            borderRadius: BorderRadius.circular(8),
                          ),
                          child: Icon(
                            CupertinoIcons.folder,
                            color: colorScheme.onPrimaryContainer,
                            size: 20,
                          ),
                        ),
                        title: Text(
                          set.setName,
                          style: Theme.of(context).textTheme.bodyLarge?.copyWith(
                                fontWeight: FontWeight.w500,
                              ),
                        ),
                        subtitle: Text(
                          '${set.invoiceCount} 张发票 · ¥${set.totalAmount.toStringAsFixed(2)}',
                          style: Theme.of(context).textTheme.bodySmall?.copyWith(
                                color: colorScheme.onSurfaceVariant,
                              ),
                        ),
                        trailing: Icon(
                          CupertinoIcons.chevron_right,
                          color: colorScheme.onSurfaceVariant,
                          size: 16,
                        ),
                        onTap: () {
                          Navigator.pop(context);
                          _addInvoicesToSet(set.id, invoiceIds);
                        },
                      );
                    },
                  ),
                );
              }
              
              if (state is ReimbursementSetError) {
                return Container(
                  padding: const EdgeInsets.all(32),
                  child: Column(
                    children: [
                      Icon(
                        CupertinoIcons.exclamationmark_circle,
                        size: 48,
                        color: colorScheme.error,
                      ),
                      const SizedBox(height: 16),
                      Text(
                        '加载报销集失败',
                        style: Theme.of(context).textTheme.bodyLarge?.copyWith(
                              color: colorScheme.error,
                            ),
                      ),
                      const SizedBox(height: 8),
                      Text(
                        state.message,
                        style: Theme.of(context).textTheme.bodySmall?.copyWith(
                              color: colorScheme.onSurfaceVariant,
                            ),
                        textAlign: TextAlign.center,
                      ),
                    ],
                  ),
                );
              }
              
              return const SizedBox.shrink();
            },
          ),
        ],
      ),
    );

    // 使用 UnifiedBottomSheet
    await UnifiedBottomSheet.showCustomSheet(
      context: context,
      child: Padding(
        padding: const EdgeInsets.all(16),
        child: selectForm,
      ),
      showCloseButton: true,
    );
  }

  /// 通过事件总线将发票添加到报销集
  static void _addInvoicesToSet(String setId, List<String> invoiceIds) {
    _eventBus.emit(
      AddInvoicesToSetRequestEvent(
        setId: setId,
        invoiceIds: invoiceIds,
        timestamp: DateTime.now(),
      ),
    );
  }
}