/// 加载组件
/// 用于显示各种加载状态
library;

// Material导入已移除，使用纯Cupertino架构
import 'package:flutter/cupertino.dart';

class LoadingWidget extends StatelessWidget {
  final String? message;
  final Color? color;
  final double? size;
  final LoadingType type;

  const LoadingWidget({
    super.key,
    this.message,
    this.color,
    this.size,
    this.type = LoadingType.circular,
  });

  @override
  Widget build(BuildContext context) {
    final colorScheme = Theme.of(context).colorScheme;
    final effectiveColor = color ?? colorScheme.primary;
    final effectiveSize = size ?? 24.0;

    return Column(
      mainAxisSize: MainAxisSize.min,
      children: [
        _buildLoadingIndicator(effectiveColor, effectiveSize),
        if (message != null) ...[
          const SizedBox(height: 12),
          Text(
            message!,
            style: CupertinoTheme.of(context).textTheme.textStyle.copyWith(
              fontSize: 14,
              color: colorScheme.onSurface.withValues(alpha: 0.7),
            ),
            textAlign: TextAlign.center,
          ),
        ],
      ],
    );
  }

  Widget _buildLoadingIndicator(Color color, double size) {
    switch (type) {
      case LoadingType.circular:
        return SizedBox(
          width: size,
          height: size,
          child: CircularProgressIndicator(
            strokeWidth: 2,
            color: color,
          ),
        );
      case LoadingType.cupertino:
        return CupertinoActivityIndicator(
          radius: size / 2,
          color: color,
        );
      case LoadingType.linear:
        return SizedBox(
          width: size * 4,
          child: LinearProgressIndicator(
            color: color,
            backgroundColor: color.withValues(alpha: 0.2),
          ),
        );
    }
  }
}

enum LoadingType {
  circular,
  cupertino,
  linear,
}