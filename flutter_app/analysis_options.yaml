# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  exclude:
    # Build and tool directories
    - build/**
    - .dart_tool/**
    - .flutter-plugins
    - .flutter-plugins-dependencies
    - .packages
    
    # Generated code files
    - lib/**/*.freezed.dart
    - lib/**/*.g.dart
    - lib/**/*.gr.dart
    - lib/generated_plugin_registrant.dart
    
    # Archive and backup directories
    - archived/**
    - backup/**
    - temp/**
    - tmp/**
    
    # Test and coverage directories
    - coverage/**
    - test_driver/**
    
    # Documentation and assets that don't need analysis
    - assets/**
    - doc/**
    - docs/**
    - examples/**
    
    # Platform-specific build outputs
    - android/app/build/**
    - ios/build/**
    - linux/build/**
    - macos/build/**
    - web/build/**
    - windows/build/**
  errors:
    invalid_annotation_target: ignore  # Ignore freezed-generated warnings

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # Essential code quality rules
    prefer_single_quotes: true
    prefer_final_fields: true
    
    # Widget and UI specific rules
    sized_box_for_whitespace: true
    use_full_hex_values_for_flutter_colors: true
    avoid_unnecessary_containers: true
    
    # Error prevention rules
    curly_braces_in_flow_control_structures: true
    unnecessary_brace_in_string_interps: true
    unnecessary_to_list_in_spreads: true
    use_super_parameters: true
    
    # Performance and memory rules
    avoid_function_literals_in_foreach_calls: true
    prefer_for_elements_to_map_fromIterable: true
    
    # Import and dependency rules
    depend_on_referenced_packages: true
    
    # Disable some overly strict rules for Flutter development
    avoid_print: false  # Allow prints for debugging in development

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
